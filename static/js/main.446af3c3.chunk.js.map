{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Searchbar/Searchbar.module.css","api.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["module","exports","fetchImages","search","page","a","axios","get","response","status","data","hits","Error","Searchbar","state","searchString","handleChange","e","setState","target","value","handleSubmit","preventDefault","trim","props","onSubmit","resetForm","alert","this","className","s","SearchForm","type","SearchForm_button","SearchForm_button__label","SearchForm_input","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","image","webformatURL","largeImageURL","tags","showModaHandlelClick","onClick","modalImage","src","alt","ImageGalleryItem_image","ImageGallery","images","map","id","Button","LoadButtonLabel","LoaderSpinner","Loader","color","height","width","timeout","Modal","handleToggleModalStatus","useEffect","onEsc","code","window","addEventListener","removeEventListener","Overlay","currentTarget","App","useState","setSearch","setImages","setPage","error","setError","isLoading","setIsLoading","setModalImage","modalIsHidden","setModalIsHidden","then","length","Promise","reject","console","log","prevImages","catch","finally","scrollTo","top","document","body","clientHeight","behavior","message","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.446af3c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2uC4S\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__1U_qc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1ewZx\",\"buttonWrapper\":\"Button_buttonWrapper__1MX6E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2N14Z\",\"Modal\":\"Modal_Modal__2mzi5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3IBVr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2jdpy\",\"SearchForm\":\"Searchbar_SearchForm__2Uz0l\",\"SearchForm_button\":\"Searchbar_SearchForm_button__3NVu3\",\"SearchForm_button__label\":\"Searchbar_SearchForm_button__label__2_0I-\",\"SearchForm_input\":\"Searchbar_SearchForm_input__JozYa\"};","import axios from \"axios\";\r\n\r\nconst baseUrl = 'https://pixabay.com/api/?';\r\nconst KEY = '23763400-56e03b3c97aa031975e4c0255';\r\nconst perPage = '12';\r\nconst filterUrl = '&image_type=photo&orientation=horizontal&safesearch=true';\r\n\r\n\r\nexport const fetchImages = async (search, page) => {\r\n    const response = await axios.get(`${baseUrl}&key=${KEY}&q=${search}${filterUrl}&page=${page}&per_page=${perPage}`)\r\n\r\n    if (response.status >= 200 && response.status < 300) {\r\n        return response.data.hits;\r\n    }\r\n    // if (data.status === 404) {\r\n    //     return Notiflix.Notify.info(\"Oops, there is no country with that name.\")\r\n    // };\r\n    throw new Error(response.status);\r\n};\r\n","import { Component } from 'react';\r\nimport s from './Searchbar.module.css';\r\n\r\nclass Searchbar extends Component {\r\n    state = {\r\n        searchString: ''\r\n    };\r\n\r\n    handleChange = e => this.setState({ searchString: e.target.value });\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const { searchString } = this.state;\r\n\r\n        if (searchString.trim() === '') {\r\n            alert(\"Введите запрос для поиска...\");\r\n            return;\r\n        };\r\n\r\n        this.props.onSubmit(searchString);\r\n        this.resetForm();\r\n    };\r\n\r\n    resetForm = () => this.setState({ searchString: '' });\r\n\r\n    render() {\r\n        const { handleSubmit, handleChange } = this;\r\n        const { searchString } = this.state;\r\n\r\n        return (\r\n            <header className={s.Searchbar}>\r\n                <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n                    <button type=\"submit\" className={s.SearchForm_button}>\r\n                        <span className={s.SearchForm_button__label}>Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className={s.SearchForm_input}\r\n                        type=\"text\"\r\n                        value={searchString}\r\n                        onChange={handleChange}\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Searchbar;","import PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nfunction ImageGalleryItem({ image: { webformatURL, largeImageURL, tags }, showModaHandlelClick }) {\r\n    return (\r\n        <li\r\n            className={s.ImageGalleryItem}\r\n            onClick={() =>\r\n                showModaHandlelClick({\r\n                    modalImage: {\r\n                        largeImageURL,\r\n                        tags\r\n                    }\r\n                })\r\n            }>\r\n            <img\r\n                src={webformatURL}\r\n                alt={tags}\r\n                className={s.ImageGalleryItem_image} />\r\n        </li>\r\n    );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n    image: PropTypes.shape({\r\n        webformatURL: PropTypes.string.isRequired,\r\n        largeImageURL: PropTypes.string.isRequired,\r\n        tags: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n    showModaHandlelClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\n\r\nfunction ImageGallery({ images, showModaHandlelClick }) {\r\n    return (\r\n        <ul className={s.ImageGallery}>\r\n            {images.map(({ id, ...image }) => {\r\n                return (\r\n                    <ImageGalleryItem\r\n                        key={id}\r\n                        image={image}\r\n                        showModaHandlelClick={showModaHandlelClick}>\r\n                    </ImageGalleryItem>\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n        })).isRequired,\r\n    showModaHandlelClick: PropTypes.func.isRequired\r\n};","import s from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n    return (\r\n        <div>\r\n            <button className={s.Button} type=\"button\" onClick={onClick}>\r\n                <span className={s.LoadButtonLabel}>Load more</span>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport s from './Loader.module.css';\r\n\r\nfunction LoaderSpinner() {\r\n    return (\r\n        <Loader\r\n            className={s.Loader}\r\n            type=\"MutatingDots\"\r\n            color=\"#3f51b5\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000} //3 secs\r\n        />\r\n    );\r\n};\r\n\r\nexport default LoaderSpinner;","import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Modal.module.css';\r\n\r\nfunction Modal({ modalImage: { largeImageURL, tags }, handleToggleModalStatus }) {\r\n\r\n    useEffect(() => {\r\n        const onEsc = e => {\r\n            if (e.code === 'Escape') { handleToggleModalStatus() }\r\n        };\r\n\r\n        window.addEventListener('keydown', onEsc);\r\n\r\n        return () => { window.removeEventListener('keydown', onEsc) };\r\n\r\n    }, [handleToggleModalStatus])\r\n\r\n\r\n\r\n    const handleClickBackdrop = (e) => {\r\n        if (e.currentTarget === e.target) {\r\n            handleToggleModalStatus();\r\n        }\r\n    };\r\n\r\n    // const { largeImageURL, tags } = this.props.modalImage;\r\n\r\n    return (\r\n        <div className={s.Overlay} onClick={handleClickBackdrop}>\r\n            <div className={s.Modal}>\r\n                <img src={largeImageURL} alt={tags} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n    handleToggleModalStatus: PropTypes.func.isRequired,\r\n    modalImage: PropTypes.shape({\r\n        largeImageURL: PropTypes.string.isRequired,\r\n        tags: PropTypes.string.isRequired\r\n    }).isRequired\r\n};","import { useState, useEffect } from 'react';\r\nimport { fetchImages } from './api';\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Button from './components/Button';\r\nimport Loader from './components/Loader';\r\nimport Modal from './components/Modal';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  const [search, setSearch] = useState('');\r\n  const [images, setImages] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [modalImage, setModalImage] = useState({});\r\n  const [modalIsHidden, setModalIsHidden] = useState(true);\r\n\r\n  // state = {\r\n  //   search: '',\r\n  //   images: [],\r\n  //   page: 1,\r\n  //   error: null,\r\n  //   isLoading: false,\r\n  //   modalImage: {},\r\n  //   modalIsHidden: true,\r\n  // };\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if (prevState.search !== this.state.search) {\r\n  //     this.setState({ images: [] }, () => {\r\n  //       this.loadImages(1);\r\n  //     });\r\n  //   }\r\n\r\n\r\n\r\n\r\n\r\n  const handleFormSubmit = (searchString) => {\r\n    setSearch(searchString);\r\n    setImages([]);\r\n    setPage(1);\r\n    setError(null);\r\n  };\r\n\r\n  const handleToggleModalStatus = () => {\r\n    setModalIsHidden(!modalIsHidden);\r\n  };\r\n\r\n  const showModaHandlelClick = ({ modalImage }) => {\r\n    setModalImage({ ...modalImage });\r\n    handleToggleModalStatus();\r\n  };\r\n\r\n  const loadMoreHandleClick = () => {\r\n    setPage(prevPage => prevPage + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadImages = () => {\r\n\r\n      setIsLoading(true);\r\n\r\n      fetchImages(search, page)\r\n        .then((response) => {\r\n          if (response.length === 0) {\r\n            return Promise.reject(\r\n              new Error(`There is no pictures by ${search} name, please try another request`));\r\n          } else {\r\n            console.log(response)\r\n            setImages(prevImages => [...(prevImages || []), ...response]);\r\n          }\r\n        })\r\n        .catch(error => setError(error))\r\n        .finally(() => setIsLoading(false));\r\n    };\r\n\r\n    if (search === '') return;\r\n\r\n    loadImages()\r\n\r\n  }, [page, search]);\r\n\r\n  useEffect(() => {\r\n    if (page !== 1) {\r\n      window.scrollTo({ top: document.body.clientHeight, behavior: 'smooth' });\r\n    }\r\n  }, [images])\r\n\r\n\r\n  return (\r\n    <>\r\n      <Searchbar\r\n        onSubmit={handleFormSubmit} />\r\n      {error &&\r\n        <h1>{error.message}</h1>}\r\n\r\n      <ImageGallery\r\n        images={images}\r\n        showModaHandlelClick={showModaHandlelClick} />\r\n\r\n      {isLoading &&\r\n        <Loader />}\r\n\r\n      {!!images.length && !isLoading &&\r\n        <Button\r\n          onClick={loadMoreHandleClick} />}\r\n\r\n      {!modalIsHidden &&\r\n        <Modal\r\n          handleToggleModalStatus={handleToggleModalStatus}\r\n          modalImage={modalImage} />}\r\n      {/* <h1>WTF</h1> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}